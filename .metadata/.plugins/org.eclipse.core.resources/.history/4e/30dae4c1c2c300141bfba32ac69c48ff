package com.codey.OpenGL;

import static org.lwjgl.opengl.GL11.glTranslated;

import org.lwjgl.opengl.Display;
import static org.lwjgl.opengl.GL11.glRotated;
import org.lwjgl.input.Mouse;
import org.lwjgl.input.Keyboard;
import org.lwjgl.util.glu.GLU;
import java.util.ArrayList;
import static org.lwjgl.opengl.GL11.glLoadIdentity;

import org.apache.commons.math3.geometry.euclidean.threed.Vector3D;
import org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates;
import static org.apache.commons.math3.util.FastMath.toDegrees;


public class CameraMan {
	private SphericalCoordinates position;
	private Particle target;
	private ArrayList<Particle> particles;
	
	public CameraMan() {
		position = new SphericalCoordinates(1000, 0, 0);
		target = new Particle(new Vector3D(0, 0, 0), new Vector3D(0, 0, 0), 0.);
		set();
	}
	
	public void setup() {
		reset();
		moveCamera();
		set();
	}
	
	public void track(Particle particle) {
		target = particle;
	}
	
	public void setParticles(ArrayList<Particle> particles) {
		this.particles = particles;
		target = particles.get(0);
	}
	
	private void reset() {
		glLoadIdentity();	
	}
	
	private void moveCamera() {
		double dPhi, dTheta, dr;
		double r, theta, phi;
		
		r = position.getR();
		theta = position.getTheta();
		phi = position.getPhi();
		
		dPhi = Mouse.isButtonDown(0) ? -Mouse.getDX() * Math.PI / 90. : 0;
		dr = -((Mouse.getDWheel() / 120) * .1 * position.getR());
		
		position = new SphericalCoordinates(r + dr, 0, phi + dPhi);
		
		if (Keyboard.isKeyDown(Keyboard.KEY_RIGHT)) {
			System.out.printf("particle %d\n", (particles.indexOf(target) + 1 )/ (particles.size()))
			track(particles.get((particles.indexOf(target) + 1 )/ (particles.size()) ));
		}
	}
	
	private void set() {
		Vector3D positionXYZ;
		Vector3D lookAt;
		
		positionXYZ = position.getCartesian();
		lookAt = target.getPosition();
		
		GLU.gluLookAt((float)positionXYZ.getX(), (float)positionXYZ.getY(), (float)positionXYZ.getZ(),
				(float)lookAt.getX(), (float)lookAt.getY(), (float)lookAt.getZ(), 0f, 1f, 0f);
	}
	
}
