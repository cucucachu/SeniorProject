package com.codey.OpenGL;

import org.lwjgl.LWJGLException;
import org.lwjgl.opengl.Display;
import org.lwjgl.opengl.DisplayMode;
import static org.lwjgl.opengl.GL11.*;

public class Launcher {

	public static final int WIDTH = 800;
	public static final int HEIGHT = 600;
	public static final int FRAME_RATE = 1;
	
	public static Moon moon;
	public static ForceField spring;
	
	public static void main(String[] args) {
		try {
			launch();
		}
		catch (Exception ex) {
			System.out.println(ex.getMessage());
			ex.printStackTrace();
			return;
		}
	}
	
	public static void launch() throws LWJGLException, Exception {
		LibraryLoader.loadNativeLibrary();
		displaySetup();
		modelSetup();
		run();
		janitor();
		
	}
	
	public static void displaySetup() throws LWJGLException {
		Display.setTitle("OpenGL");
		Display.setResizable(true);
		Display.setDisplayMode(new DisplayMode(WIDTH, HEIGHT));
		Display.setVSyncEnabled(true);
		Display.setFullscreen(true);
		Display.create();
		
		resize();
		
		glEnable(GL_BLEND);
		glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
		
		glMatrixMode(GL_PROJECTION);
		glLoadIdentity();
		glOrtho(0, WIDTH, 0, HEIGHT, -1, 1);
		glMatrixMode(GL_MODELVIEW);
		glClearColor(0f, 0f, 0f, 1f);
	}
	
	public static void modelSetup() {
		moon = new Moon(100.0, 0.0, 1.0);
		spring = new ForceField(0.0001);
	}
	
	public static void run() {	
		int time = 0;
		double force;
		
		while(!Display.isCloseRequested()) {
			if (Display.wasResized())
				resize();
			
			force = spring.forceAtPoint(moon.getPosition());
			//moon.step(1, force);
			render();
			
			Display.update();
			Display.sync(FRAME_RATE);
			time++;
		}
	}
	
	public static void janitor() {
		Display.destroy();
	}
	
	public static void render() {
		// Clear the screen and depth buffer
		glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);	
		
		glColor3f(.5f, .25f, 1f);
	    
		drawSquare((WIDTH / 2) + moon.getPosition(), (HEIGHT / 2), 20.0, 20.0);
		//drawSquare(20.0, 20.0, 20.0, 20.0);
	}
	
	private static void drawSquare(double x, double y, double width, double height) {		
		glBegin(GL_QUADS);
		{
			glVertex2f((float)x, (float)y);
			glVertex2f((float)x + (float)width, (float)y);
			glVertex2f((float)x + (float)width, (float)y + (float)height);
			glVertex2f((float)x, (float)y + (float)height);
		}
		glEnd();
	}


	
	public static void resize() {
		glViewport(0, 0, Display.getWidth(), Display.getHeight());
	}
}
